{"version":3,"sources":["TabbedHeaderPager.tsx"],"names":["React","View","Animated","useAnimatedStyle","useWorkletCallback","SafeAreaView","commonStyles","StickyHeaderScrollView","parseAnimatedColorProp","HeaderBar","Pager","useTabbedHeaderPager","TabbedHeaderPager","forwardRef","props","ref","backgroundColor","children","contentContainerStyle","disableScrollToPosition","decelerationRate","enableSafeAreaTopInset","initialPage","logo","logoContainerStyle","logoResizeMode","logoStyle","nestedScrollEnabled","onChangeTab","overScrollMode","pagerProps","rememberTabScrollPosition","renderHeaderBar","scrollEventThrottle","rest","currentPage","innerScrollHeight","onHorizontalPagerScroll","onMomentumScrollEnd","onScroll","onScrollEndDrag","renderHeader","renderTabs","scrollHeight","scrollValue","scrollViewRef","setCurrentPage","useImperativeHandle","current","wrapperAnimatedStyle","handleChangeTab","useCallback","prevPage","newPage","handleScroll","e","container","stretch"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { NativeScrollEvent, ScrollView } from 'react-native';\nimport { View } from 'react-native';\nimport Animated, { useAnimatedStyle, useWorkletCallback } from 'react-native-reanimated';\nimport type { Edge } from 'react-native-safe-area-context';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport { commonStyles } from '../../constants';\nimport { StickyHeaderScrollView } from '../../primitiveComponents/StickyHeaderScrollView';\nimport { parseAnimatedColorProp } from '../common/utils/parseAnimatedColorProp';\n\nimport type { TabbedHeaderPagerProps } from './TabbedHeaderProps';\nimport { HeaderBar } from './components/HeaderBar';\nimport { Pager } from './components/Pager';\nimport { useTabbedHeaderPager } from './hooks/useTabbedHeader';\n\nexport const TabbedHeaderPager = React.forwardRef<ScrollView, TabbedHeaderPagerProps>(\n  (props, ref) => {\n    const {\n      backgroundColor,\n      children,\n      contentContainerStyle,\n      disableScrollToPosition,\n      decelerationRate = 'fast',\n      enableSafeAreaTopInset = true,\n      initialPage,\n      logo,\n      logoContainerStyle,\n      logoResizeMode,\n      logoStyle,\n      nestedScrollEnabled = true,\n      onChangeTab,\n      overScrollMode = 'never',\n      pagerProps,\n      rememberTabScrollPosition,\n      renderHeaderBar,\n      scrollEventThrottle = 16,\n      ...rest\n    } = props;\n    const {\n      currentPage,\n      innerScrollHeight,\n      onHorizontalPagerScroll,\n      onMomentumScrollEnd,\n      onScroll,\n      onScrollEndDrag,\n      renderHeader,\n      renderTabs,\n      scrollHeight,\n      scrollValue,\n      scrollViewRef,\n      setCurrentPage,\n    } = useTabbedHeaderPager(props);\n\n    React.useImperativeHandle(ref, () => scrollViewRef.current as ScrollView);\n\n    const wrapperAnimatedStyle = useAnimatedStyle(() => {\n      return {\n        backgroundColor: parseAnimatedColorProp(backgroundColor),\n      };\n    }, [backgroundColor]);\n\n    const handleChangeTab = React.useCallback(\n      (prevPage: number, newPage: number) => {\n        setCurrentPage(newPage);\n        onChangeTab?.(prevPage, newPage);\n      },\n      [onChangeTab, setCurrentPage]\n    );\n\n    const handleScroll = useWorkletCallback(\n      (e: NativeScrollEvent) => {\n        onHorizontalPagerScroll(e);\n        pagerProps?.onScroll?.(e);\n      },\n      [onHorizontalPagerScroll, pagerProps?.onScroll]\n    );\n\n    return (\n      <Animated.View style={[commonStyles.container, wrapperAnimatedStyle]}>\n        {renderHeaderBar ? (\n          renderHeaderBar()\n        ) : logo ? (\n          <HeaderBar\n            backgroundColor={backgroundColor}\n            enableSafeAreaTopInset={enableSafeAreaTopInset}\n            logo={logo}\n            logoContainerStyle={logoContainerStyle}\n            logoResizeMode={logoResizeMode}\n            logoStyle={logoStyle}\n          />\n        ) : (\n          <SafeAreaView\n            edges={['left', 'right', ...(enableSafeAreaTopInset ? ['top' as Edge] : [])]}\n            style={commonStyles.stretch}\n          />\n        )}\n        <View style={commonStyles.container}>\n          <StickyHeaderScrollView\n            ref={scrollViewRef}\n            {...rest}\n            contentContainerStyle={contentContainerStyle}\n            decelerationRate={decelerationRate}\n            nestedScrollEnabled={nestedScrollEnabled}\n            onMomentumScrollEnd={onMomentumScrollEnd}\n            onScrollEndDrag={onScrollEndDrag}\n            onScroll={onScroll}\n            overScrollMode={overScrollMode}\n            renderHeader={renderHeader}\n            renderTabs={renderTabs}\n            scrollEventThrottle={scrollEventThrottle}>\n            <Pager\n              {...pagerProps}\n              disableScrollToPosition={disableScrollToPosition}\n              initialPage={initialPage}\n              minScrollHeight={innerScrollHeight}\n              onChangeTab={handleChangeTab}\n              onScroll={handleScroll}\n              page={currentPage}\n              rememberTabScrollPosition={rememberTabScrollPosition}\n              scrollHeight={scrollHeight}\n              scrollRef={scrollViewRef}\n              scrollValue={scrollValue}>\n              {children}\n            </Pager>\n          </StickyHeaderScrollView>\n        </View>\n      </Animated.View>\n    );\n  }\n);\n"]}